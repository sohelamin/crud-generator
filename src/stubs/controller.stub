<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespace{{crudNameCap}};
use Illuminate\Http\Request;
use Carbon\Carbon;

class DummyClass extends Controller
{

	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
<<<<<<< HEAD
		${{crudNamePlural}} = {{crudNameCap}}::latest()->get();
		return view('{{crudName}}.index', compact('{{crudNamePlural}}'));
=======
		${{crudNamePlural}} = {{crudNamePluralCap}}::latest()->get();
		return view('{{viewPath}}{{crudName}}.index', compact('{{crudNamePlural}}'));
>>>>>>> appzcoder/1.0
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		return view('{{viewPath}}{{crudName}}.create');
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store(Request $request)
	{
<<<<<<< HEAD
		//$this->validate($request, ['name' => 'required']); // Uncomment and modify if needed.
		{{crudNameCap}}::create($request->all());
		return redirect(config('crud.url_prefix', '') . '/' . '{{crudName}}');
=======
		//$this->validate($request, ['name' => 'required']); // Uncomment and modify if you need to validate any input.
		{{crudNamePluralCap}}::create($request->all());
		return redirect('{{crudName}}');
>>>>>>> appzcoder/1.0
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
<<<<<<< HEAD
		${{crudNameSingular}} = {{crudNameCap}}::findOrFail($id);
		return view('{{crudName}}.show', compact('{{crudNameSingular}}'));
=======
		${{crudNameSingular}} = {{crudNamePluralCap}}::findOrFail($id);
		return view('{{viewPath}}{{crudName}}.show', compact('{{crudNameSingular}}'));
>>>>>>> appzcoder/1.0
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
<<<<<<< HEAD
		${{crudNameSingular}} = {{crudNameCap}}::findOrFail($id);
		return view('{{crudName}}.edit', compact('{{crudNameSingular}}'));
=======
		${{crudNameSingular}} = {{crudNamePluralCap}}::findOrFail($id);
		return view('{{viewPath}}{{crudName}}.edit', compact('{{crudNameSingular}}'));
>>>>>>> appzcoder/1.0
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id, Request $request)
	{
<<<<<<< HEAD
		//$this->validate($request, ['name' => 'required']); // Uncomment and modify if needed.
		${{crudNameSingular}} = {{crudNameCap}}::findOrFail($id);
=======
		//$this->validate($request, ['name' => 'required']); // Uncomment and modify if you need to validate any input.
		${{crudNameSingular}} = {{crudNamePluralCap}}::findOrFail($id);
>>>>>>> appzcoder/1.0
		${{crudNameSingular}}->update($request->all());
		return redirect(config('crud.url_prefix', '') . '/' . '{{crudName}}');
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		{{crudNameCap}}::destroy($id);
		return redirect(config('crud.url_prefix', '') . '/' . '{{crudName}}');
	}

}
